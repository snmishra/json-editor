name: Build and Test

on: [push, pull_request]

jobs:

  unit-test:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Node version
        run: node -v
      - name: Cache NPM packages
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          path: |
            ~/.npm
      - name: Install
        run: npm ci
      - name: Test
        run: npm run test-headless

  build-image:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v4
        with:
          context: .
          file: tests/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/${{ github.repository_owner }}/jsoneditor:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/jsoneditor:latest

  chrome-test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - build-env: "build.prod"
          - build-env: "build.nonmin.travis"
      fail-fast: false
    needs: [build-image]
    defaults:
      run:
        shell: bash
        working-directory: /repo/tests
    container:
      image: ghcr.io/${{ github.repository_owner }}/jsoneditor:${{ github.sha }}
      options: --user root
    services:
      chrome:
        image: selenium/standalone-chrome:4.8.0
        ports:
          - 4444:4444
          - 9060:5900
        env:
          VNC_NO_PASSWORD: 1
    env:
      BUILD_ENV: ${{ matrix.build-env }}
    steps:
      #- name: Install
      #  run: |
      #    npm install
      - name: Build
        run: npm run ${BUILD_ENV}
      - name: Test
        run: |
          codeceptjs -c /repo/tests/codeceptjs/codecept.json run-multiple basic:chrome --invert --grep  '@optional'
          pwd
          ls -la codeceptjs/output
      - name: Test Artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: codeceptjs-output
          path: tests/codeceptjs/output
          retention-days: 30
      - name: Test (optional)
        continue-on-error: true
        run: docker-compose exec -T node codeceptjs -c /repo/tests/codeceptjs/codecept.json run-multiple basic:chrome --grep '@optional'

